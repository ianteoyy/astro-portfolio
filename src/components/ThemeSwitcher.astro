---
import { Icon } from "astro-icon";
---

<label class="relative w-8 h-8 select-none">
  <input id="theme-switcher" class="hidden" type="checkbox" />
  <Icon
    name="pixelarticons:sun"
    class="sun-icon transition cursor-pointer hover:text-accent dark:hover:text-background/80 hover:-translate-x-px hover:-translate-y-px duration-500 w-full h-full absolute"
  />
  <Icon
    name="moon"
    class="moon-icon transition cursor-pointer hover:text-accent dark:hover:text-background/80 hover:-translate-x-px hover:-translate-y-px duration-500 w-full absolute h-full"
  />
</label>

<script>
  const themeSwitcher = document.querySelector(
    "#theme-switcher"
  ) as HTMLInputElement;

  themeSwitcher.addEventListener("change", () => {
    changeTheme(themeSwitcher.checked);
  });

  function changeTheme(isDarkMode: boolean, storeSettings: boolean = true) {
    const htmlElement = document.querySelector("html") as HTMLHtmlElement;
    if (isDarkMode) {
      themeSwitcher.checked = true;
      htmlElement.classList.add("dark");
      htmlElement.classList.remove("light");
    } else {
      themeSwitcher.checked = false;
      htmlElement.classList.add("light");
      htmlElement.classList.remove("dark");
    }
    if (storeSettings) {
      localStorage.setItem("dark-mode", themeSwitcher.checked.toString());
    }
  }

  (function initiallySetDarkModeSettings() {
    const darkModeStorageSetting = localStorage.getItem("dark-mode");
    if (darkModeStorageSetting !== null) {
      setThemeBasedOnStorage();
    } else {
      setThemeBasedOnSystemPreference();
    }

    function setThemeBasedOnStorage() {
      const userManuallySetDarkMode =
        darkModeStorageSetting && JSON.parse(darkModeStorageSetting);
      changeTheme(userManuallySetDarkMode, false);
    }

    function setThemeBasedOnSystemPreference() {
      const userPrefersDarkMode =
        window.matchMedia &&
        window.matchMedia("(prefers-color-scheme: dark)").matches;
      changeTheme(userPrefersDarkMode, false);
    }
  })();
</script>

<style>
  input:not(:checked) ~ .moon-icon {
    @apply opacity-0 translate-x-8 rotate-45 translate-y-2;
  }

  input:checked ~ .sun-icon {
    @apply opacity-0 -translate-x-8 -rotate-45 translate-y-2;
  }

  input:checked ~ .moon-icon,
  input:not(:checked) ~ .sun-icon {
    @apply opacity-100 translate-x-0;
  }
</style>
